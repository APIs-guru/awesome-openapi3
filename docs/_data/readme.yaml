luckymarmot/API-Flow: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
googleapis/gnostic: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/swagger2openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
oasis-tcs/odata-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
xuzhg/OData.OpenAPI: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mission-liao/pyswagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
koumoul-dev/openapi-viewer: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
contentjet/openapi-ui: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
sourcey/spectacle: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Rebilly/ReDoc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mermade/widdershins: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Rebilly/generator-openapi-repo: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
temando/open-api-renderer: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
RepreZen/KaiZen-OpenAPI-Editor: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-editor: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apicurio/apicurio-studio: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apiacademy/rapido-web: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mermade/openapi-gui: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
stoplightio/prism: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Szasza/express-gateway-plugin-openapi3-mock-server: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-node: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
modern-project/modern-ruby: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
go-swagger/go-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-inflector: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
networknt/light-rest-4j: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apioo/fusio: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
smartrecruiters/openapi-first: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-core: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
BigstickCarpet/swagger-cli: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
RepreZen/KaiZen-OpenApi-Parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
networknt/openapi-parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
metadevpro/openapi3-ts: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Apicurio/oai-ts-core: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kevindew/openapi3_parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
getkin/kin-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
adwhit/openapi3-rust: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
wework/speccy: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apioo/psx-api: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
p1c2u/openapi-spec-validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Microsoft/OpenAPI.NET: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fmvilas/swagger-node-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
janephp/open-api: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
dtzar/openapi-auto-test: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apiaryio/dredd: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
quen2404/openapi-diff: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-filter: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-extract: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
webonix/swagger-docs-cfml: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
silas/swagger-framework: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
batdevis/swagger_engine: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-angular-client: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
richhollis/swagger-docs: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
EiffelWebFramework/swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
SmartBear/swagger4j: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ROAMSYS/swaggerapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ryankennedy/swagger-jaxrs-doclet: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-node-client: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
springfox/springfox-grails-integration: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
rantav/flask-restful-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
emicklei/go-restful: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
springfox/springfox-grails-demo: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gong023/swagger-assert: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
worldline/swagger-jack: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Luracast/Restler: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-cli-client: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
concentricsky/django-tastypie-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fliptoo/swagger-express: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
KevM/fubumvc-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ServiceStack/ServiceStack: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
rahulsom/swaggydoc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
glennjones/hapi-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
stemey/gform-admin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mac-/ratify: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
marcgibbons/django-rest-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-client-generator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
solso/source2swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
myfreeweb/octohipster: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gettyimages/spray-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
skrusty/dotswaggen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
yvasiyarov/swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
SerenaFeng/tornado-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
siemens/restapidoc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
josephpconley/swagger2postman: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
wonderlic/swagger-validation: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-validate: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
DarthFubuMVC/fubumvc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kenshoo/swagger-validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
nelmio/NelmioApiDocBundle: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
astaxie/beego: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
signalfx/swagger-ajax-client: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swagger-api/swagger-ui: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
wkennedy/swagger4spring-web: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
sun-opsys/api-doc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
abelsilva/swaggerwcf: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fleekjs/fleek-parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
pipermerriam/flex: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
yahehe/Nancy.Swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
penx/openapi-mock: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apigee/undefined: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
xerions/phoenix_swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apiaryio/fury-adapter-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fleekjs/fleek-response: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
marcelojaloto/SwagDoc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
senchalabs/connect: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Yelp/bravado: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
stackia/test2doc.js: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
RobWin/assertj-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mobilcom-debitel/got-swag: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
metosin/ring-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
byjg/php-swagger-test: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
alekseyl/mini-apivore: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Surnet/swagger-jsdoc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
domaindrivendev/Swashbuckle: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gossi/swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Maks3w/SwaggerAssertions: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
metosin/compojure-api: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Azure/AutoRest: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
subeeshcbabu/swagmock: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
zalando/friboo: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
krakenjs/generator-swaggerize: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ninenines/cowboy: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
BlueOakJS/blueoak-server: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Trax-air/swagger-aggregator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Reckon-Limited/serverless_swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
capitalone/oas-nodegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
calcinai/strut: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
pingf/falsy: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gangverk/flask-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Yelp/swagger_spec_validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tminglei/binder-swagger-java: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
thebignet/swagger-codegen-gradle-plugin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
striglia/pyramid_swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kaizhu256/node-swagger-mongodb: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
krakenjs/swaggerize-express: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
khrt/Raisin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mobilcom-debitel/pokemock: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fleekjs/fleek-validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
oatpp/oatpp-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
zaaack/koa-joi-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ruby-grape/grape-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apigee-127/swagger-tools: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
metosin/fnhouse-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
yonaskolb/SwagGen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
jolie/jester: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Yelp/bravado-core: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
unicredit/sbt-swagger-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
MicroarrayTecnologia/spec-synthase: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fleekjs/fleek-router: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Trax-air/swagger-stub: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Nexmo/oas_parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ampedandwired/bottle-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
vanderlee/PHPSwaggerGen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
garethjevans/swagger-codegen-maven-plugin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
noirbizarre/flask-restplus: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Trax-air/swagger-parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
elmiko/pecan-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
smoketurner/dropwizard-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Trax-air/swagger-tester: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
cachecontrol/hippie-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
guokr/swagger-py-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
domaindrivendev/rswag: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
drewish/rspec-rails-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
zalando/connexion: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
rochacbruno/flasgger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fotinakis/swagger-blocks: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
westfieldlabs/apivore: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
slanatech/swagger-stats: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
notonthehighstreet/svelte: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
domaindrivendev/Swashbuckle.AspNetCore: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
z0mt3c/hapi-swaggered: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
jfinkhaeuser/prance: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
swimlane/qswag: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
frankiesardo/pedestal-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gengo/grpc-gateway: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
BigstickCarpet/swagger-express-middleware: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
RobWin/swagger2markup-gradle-plugin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
raphael/goa: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
'BigstickCarpet/swagger-parser#swagger-parser': >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kogosoftwarellc/express-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
inaka/cowboy-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
gedaiu/swaggarize: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tjwebb/sails-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
sarnowski/swagger1st: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
lucybot/api-spec-converter: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
zalando/play-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
casualjim/go-swagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
krakenjs/swaggerize-hapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
AntXlab/pyswagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
RobWin/swagger2markup: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
OpenAPITools/openapi-generator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
marshmallow-code/apispec: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
APIs-guru/awesome-openapi3: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Orange-OpenSource/angular-swagger-ui: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
thomaxxl/safrs: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
cebe/php-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
AresS31/swurg: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
danielgtaylor/apisprout: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tobilg/api2html: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
epiphone/routing-controllers-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
koumoul-dev/vue-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
sanjayvacharya/sleeplessinslc: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
epiphone/class-validator-jsonschema: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
apisyouwonthate/openapi.tools: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fsprojects/OpenAPITypeProvider: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
outofcoffee/vertx-oas: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
cdimascio/openapi-spring-webflux-validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
fmvilas/openapi3-generator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
atlassian/oas3-chow-chow: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
mrTimofey/vue-admin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Microsoft/OpenAPI.NET.OData: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-lint-vscode: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tavis-software/Tavis.OpenApi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
rafaelcaricio/sticker: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
cdimascio/kotlin-spring-mvc-template: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
wzshiming/gen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
technocreatives/openapi-eller: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
go-courier/oas: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
koumoul-dev/data-fair: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi3-examples: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Rots/n26-api: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
isa-group/oas-tools: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ckaratzas/vertx-openapi-spec-generator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
OpenAPITools/openapi-petstore: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
technocreatives/openapi-mock-eller: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
serafin-labs/serafin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
yayoc/swagger-to-mock: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
rinold/Steamer: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
wzshiming/openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
isa-group/oas-generator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
erasys/openapi-php: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
SkeLLLa/fastify-oas: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
SabzCity/go-library: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
lendingblock/aio-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/swaggerplusplus: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
niteoweb/pyramid_openapi3: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
OverSpeedIO/koa2-oas3: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-webconverter: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
zweidenker/OpenAPI: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
denismakogon/fn-openapi-v3: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
nasa9084/go-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
foxel/openapi3-typescript-codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
muskratjs/muskrat: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kinecosystem/ecosystem-api: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
microprofile-extensions/openapi-ext: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
philosowaffle/vs-openapi-designer: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
ckaratzas/tus-server-implementation: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Dzoukr/OpenAPIParser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
confuser/exegesis-koa: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
unifysell/unifysell-sdk-php: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kumuluz/kumuluzee-openapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
koumoul-dev/soas: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
entrepreneur-interet-general/open_api_schemas_to_markdown: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
brreg/openAPI: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
funa1g/multi-file-oas-example: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
koshevy/oapi3codegen: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
acme-software/typeswagger: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
unjello/openapi-mockk: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Bankdata/gradle-swagger-plugin: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
chrisdostert/listener-from-oas3-js: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
smartrecruiters/openapi-schemas-validator: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
kazuki/pyramid-oas3: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
vivek-26/koa-openapi3-router: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tandfgroup/schema-oas: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
data-studio/data-studio: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
unjello/openapi-parser: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
joar/py-openapilib: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
SensibleWood/swaggerui-webpack-boilerplate: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
pglass/py-openapi-schema-to-json-schema: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
riddhi89/simple-flask-project: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
Mermade/openapi-gui: >+
  OpenAPI-GUI

  ===========


  OpenAPI-GUI is a GUI for creating and editing OpenAPI version 3.0.x JSON/YAML
  definitions. In its current form it is most useful as a tool for starting off
  and editing simple OpenAPI definitions. Imported OpenAPI 2.0 definitions are
  automatically converted to v3.0.


  ![Screenshot](https://github.com/Mermade/openapi-gui/blob/master/img/screenshot.png?raw=true)


  For the previous Swagger / OpenAPI 2.0-only version see
  [here](https://mikeralphson.github.io/openapi-gui). This version is currently
  **unmaintained** apart from security fixes.


  This project was initially a fork of [Daryl Kuhn's
  IODoctor](https://github.com/darrylkuhn/iodoctor/tree/angular-port), which in
  turn was inspired by [IODoctor by Brandon
  West](https://github.com/brandonmwest/iodoctor) which was written in Ruby. The
  complete history of the project is maintained on GitHub.


  Description

  -----------

  ### How It Works


  Select an existing OpenAPI 2.0 or 3.0.x definition to upload, or create a new
  definition and start adding Paths, Operations, and Parameters. When an
  existing definition is used, it is parsed and forms for editing each Path,
  Operation and Parameter will be created.


  You can load an existing definition by appending a `?url=` query parameter to
  the initial start page.


  Click an item from the menu on the left to begin editing. View the JSON/YAML
  output at any time by selecting one of the "Export" tabs. When finished,
  download the output to save it locally or copy it your clipboard. OpenAPI-GUI
  only stores one definition at a time, and this is in your browser's
  local-storage. Make sure you save your JSON/YAML output locally.


  Before performing a destructive action, OpenAPI-GUI saves the current state of
  the definition. At all other times you must remember to select Save manually.


  ### Technology


  OpenAPI-GUI runs entirely client-side using a number of Javascript frameworks
  including [Vue.JS](https://vuejs.org/), [jQuery](https://jquery.com/) and
  [Bulma](http://bulma.io/) for CSS.


  To get the app up and running just browse to [the live version on GitHub
  pages](https://mermade.github.io/openapi-gui), deploy a clone to GitHub pages,
  deploy to Heroku using the button below, or clone the repo and point a browser
  at `index.html` or host it yourself - couldn't be simpler. More [technical
  information here](docs/technical.md).


  You only need to `npm install` the Node.js modules if you wish to use the
  `openapi-gui` embedded web server (i.e. not if you are running your own
  web-server), otherwise they are only there for PaaS deployments.


  [![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)


  #### CLI options


  ```

  -d, --definition    serve the given OAS definition

  -l, --launch        start a web-browser pointing to the GUI

  -p, --port          specify the port to run on, defaults to $PORT or 3000

  -w, --write         enable writing back to the source definition

  ```


  #### Running with Docker


  If you don't have a local Node development environment, or if you would prefer
  to run OpenAPI-GUI in a Docker container, you can do in with a few simple
  steps:


  1. Clone the repository.

  2. Run `docker build -t mermade/openapi-gui .` to build the Docker image
  (`mermade/openapi-gui`)

  3. Run `docker run --name openapi-gui -p 8080:3000 -d mermade/openapi-gui` to
  run the server on port 8080.

  4. Navigate to `http://localhost:8080` in your favorite browser.

  5. When you're done, shut down the server by running `docker stop openapi-gui
  && docker rm openapi-gui`


  Or you can pull the pre-built Docker image:


  * `docker pull mermade/openapi-gui`


  ### Limitations


  * OpenAPI-GUI will de-reference shared parameters.

  * The definition must be self-contained with no external `$ref`s. **This is
  likely to be resolved (ho-ho) soon**.

  * Editing a response / example / body schema will dereference it.

  * OpenAPI-GUI will not always preserve vendor-extensions, e.g. if a parameter
  is deleted and recreated.

  * OpenAPI-GUI will not preserve comments from definitions imported in YAML
  format.


  TODO

  ----


  * See the [TODO list](/docs/TODO.md) and the current status of [OpenAPI 3.0
  specification support](docs/openapi3-support.md).

Mermade/widdershins: >
  # widdershins

  OpenAPI / Swagger / AsyncAPI / Semoasa definition to
  [Slate](https://github.com/lord/slate) /

  [Shins](https://github.com/mermade/shins) compatible markdown


  ![Build](https://img.shields.io/travis/Mermade/widdershins/master.svg)
  [![Tested on
  APIs.guru](https://api.apis.guru/badges/tested_on.svg)](https://APIs.guru)
  [![Tested on Mermade
  OpenAPIs](https://img.shields.io/badge/Additional%20Specs-419-brightgreen.svg)](https://github.com/mermade/OpenAPI_specifications)

  [![Known
  Vulnerabilities](https://snyk.io/test/npm/widdershins/badge.svg)](https://snyk.io/test/npm/widdershins)


  <img src="http://mermade.github.io/widdershins/logo.png" width="247px"
  height="250px" />


  ### Widdershins *adverb*:

  * In a direction contrary to the sun's course;

  * anticlockwise;

  * helping you produce static documentation from your OpenAPI 3.0 / Swagger 2.0
  / AsyncAPI 1.x / Semoasa 0.1.0 definition


  ![Widdershins
  screenshot](https://mermade.github.io/widdershins/screenshot.png)


  ### News


  * As of v3.0.0 Widdershins no longer expands the definition of OpenAPI body
  parameters / requestBodies by default, unless they have an inline schema. You
  can restore the old behaviour by using the `--expandBody` option.

  * You may limit the depth of schema examples using the `--maxDepth` option.
  The default is 10.

  * To omit schemas entirely, please copy and customise the `main.dot` template.

  * As of v3.1.0 Widdershins includes a generated `Authorization` header in
  OpenAPI code samples. If you wish to omit this, see
  [here](/templates/openapi3/README.md).

  * If you are using Node.js 6 or lower, please specify the `--harmony` flag.


  ### To install


  * Clone the git repository, or

  * `npm install [-g] widdershins`


  ### Examples


  Command-line use looks like this:

  ```

  node widdershins [options] {input-file|url} [[-o] output markdown]

  ```


  For example:

  ```

  node widdershins --search false --language_tabs 'ruby:Ruby' 'python:Python'
  --summary defs/petstore3.json -o petstore3.md

  ```


  ### Options


  | CLI parameter name | JavaScript parameter name | Type | Default value |
  Description |

  | --- | --- | --- | --- | --- |

  | --customApiKeyValue | options.customApiKeyValue | string | ApiKey | Set a
  custom API key value |

  | --expandBody | options.expandBody | boolean | false | Expand the requestBody
  parameter to show all properties in the request body |

  | --headings | options.headings | integer | 2 | The number of headings to show
  in the table of contents. Currently supported only by Shins, not by Slate,
  which lacks this feature. |

  | --omitBody | options.omitBody | boolean | false | Omit the top-level fake
  body parameter object |

  | --resolve | options.resolve | boolean | false | Resolve external $refs,
  using the `source` parameter or the input file as the base location |

  | --shallowSchemas | options.shallowSchemas | boolean | false | Don't expand
  schemas past $refs |

  | N/A | options.source | string | | The absolute location or URL of the source
  file to use as the base to resolve relative references ($refs) from; required
  if options.resolve is set to true. For CLI commands, Widdershins uses the
  input file as the base for the $refs. |

  | --summary | options.tocSummary | boolean | false | Use the operation summary
  as the TOC entry instead of the ID |

  | --verbose | options.verbose | boolean | false | Increase verbosity |

  | -h, --help | options.help | boolean | false | Show help |

  | --version | options.version | boolean | false | Show version number |

  | -c, --code | options.codeSamples | boolean | false | Turn generic code
  samples off |

  | --httpsnippet | options.httpsnippet | boolean | false | Use httpsnippet to
  generate code samples |

  | -d, --discovery | options.discovery | boolean | false | Include schema.org
  WebAPI discovery data |

  | -e, --environment | options.environment | string | None | Load
  config/override options from file |

  | -i, --includes | options.includes | string | None | List of files to
  include, comma separated |

  | -l, --lang | options.lang | boolean | false | Automatically generate list of
  languages for code samples |

  | --language_tabs | options.language_tabs | string | (Differs for each input
  type) | List of language tabs for code samples using language[:label[:client]]
  format |

  | -m, --maxDepth | options.maxDepth | integer | 10 | Maximum depth for schema
  examples |

  | -o, --outfile | options.outfile | string | (If left blank, output to stdout)
  | File to write output markdown to |

  | -r, --raw | options.raw | boolean | false | Output raw schemas not example
  values |

  | -s, --search | options.search | boolean | true | Whether to enable search or
  not |

  | -t, --theme | options.theme | string | darkula | Syntax-highlighter theme to
  use |

  | -u, --user_templates | options.user_templates | string | None | Directory to
  load override templates from |

  | -x, --experimental | options.experimental | boolean |  | For backwards
  compatibility only, ignored |

  | -y, --yaml | options.yaml | boolean | false | Display JSON schemas in YAML
  format |

  |  | options.templateCallback | function | None | A function that is called
  before and after each template (JavaScript code only) |


  In Node.JS code, create an options object and pass it to the Widdershins
  `convert` function, as in this example:


  ```javascript

  const converter = require('widdershins');

  let options = {}; // defaults shown

  options.codeSamples = true;

  options.httpsnippet = false;

  //options.language_tabs = [];

  //options.language_clients = [];

  //options.loadedFrom = sourceUrl; // only needed if input document is relative

  //options.user_templates = './user_templates';

  options.templateCallback = function(templateName,stage,data) { return data };

  options.theme = 'darkula';

  options.search = true;

  options.sample = true; // set false by --raw

  options.discovery = false;

  options.includes = [];

  options.shallowSchemas = false;

  options.tocSummary = false;

  options.headings = 2;

  options.yaml = false;

  //options.resolve = false;

  //options.source = sourceUrl; // if resolve is true, must be set to full path
  or URL of the input document

  converter.convert(apiObj,options,function(err,str){
    // str contains the converted markdown
  });

  ```


  To only include a subset of the pre-defined language-tabs, or to rename their
  display-names, you can override the `options.language_tabs`:


  ```javascript

  options.language_tabs = [{ 'go': 'Go' }, { 'http': 'HTTP' }, { 'javascript':
  'JavaScript' }, { 'javascript--nodejs': 'Node.JS' }, { 'python': 'Python' }, {
  'ruby': 'Ruby' }];

  ```


  The `--environment` option specifies a JSON or YAML-formatted `options`
  object, for example:


  ```json

  {
    "language_tabs": [{ "go": "Go" }, { "http": "HTTP" }, { "javascript": "JavaScript" }, { "javascript--nodejs": "Node.JS" }, { "python": "Python" }, { "ruby": "Ruby" }],
    "verbose": true,
    "tagGroups": [
      {
        "title": "Companies",
        "tags": ["companies"]
      },
      {
        "title": "Billing",
        "tags": ["invoice-create", "invoice-close", "invoice-delete"]
      }
    ]
  }

  ```


  You can also use the environment file to group OAS/Swagger tagged paths
  together to create a more elegant table of contents, and overall page
  structure.


  If you need to support a version of Slate \<v1.5.0 (or a renderer which also
  doesn't support display-names for language-tabs, such as `node-slate`,
  `slate-node` or `whiteboard`), you can use the `--environment` option with the
  included `whiteboard_env.json` file to simply achieve this.


  If you are using the `httpsnippet` option to generate code samples, you can
  specify the client library used to perform the requests for each language by
  overriding the `options.language_clients`:


  ```javascript

  options.language_clients = [{ 'shell': 'curl' }, { 'node': 'request' }, {
  'java': 'unirest' }];

  ```


  To see the list of languages and clients supported by httpsnippet, [click
  here](https://github.com/Kong/httpsnippet/tree/master/src/targets).


  The `loadedFrom` option is only needed where the OpenAPI / Swagger definition
  does not specify a host, and (as per the OpenAPI
  [specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#fixed-fields))
  the API endpoint is deemed to be based on the source URL

  the definition was loaded from.


  Note that the list of included files is simply passed into the header of the
  markdown file, they are actually included by Slate or the alternative you use.


  To see the list of highlight-js syntax highlighting themes, [click
  here](https://highlightjs.org/static/demo/).


  Schema.org WebAPI discovery data is included if the `discovery` option above
  is set `true`. See the W3C [WebAPI Discovery Community
  Group](https://www.w3.org/community/web-api-discovery/) for more information.


  ## Language tabs


  Widdershins supports the `x-code-samples`
  [vendor-extension](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md#operation-object-vendor-extensions)
  to completely customise your documentation. Alternatively, you can edit the
  default code-samples in the `templates` sub-directory, or override them using
  the `user_templates` option to specify a directory containing your templates.


  Widdershins supports the use of multiple language tabs with the same language
  (i.e. plain Javascript and Node.Js). To use this support you must be using
  Slate (or one of its ports compatible with) version 1.5.0 or higher.
  [Shins](https://github.com/mermade/shins) versions track Slate version
  numbers.


  ## Template parameters


  Templates are compiled with [doT.js](https://github.com/olado/doT#readme).


  Templates have access to a `data` object with a range of properties based on
  the document context.


  If you specify an `options.templateCallback` function, it will be called
  before and after each template, with three parameters, the template name, the
  stage, (`'pre'` or `'post'`) and the current `data` object. You can mutate the
  `data` object in any way you see fit, as long as you `return` it. Content in
  the `data.append` property will be appended to the current output stream.


  * [Swagger 2.0 / OpenAPI 3.0.x template
  parameters](/templates/openapi3/README.md)

  * [AsyncAPI 1.x template parameters](/templates/asyncapi1/README.md)

  * [Semoasa 0.1.0 template parameters](/templates/semoasa/README.md)


  ## User templates


  To override a `.dot` template, you need to copy over the child `.def` partials
  as well.


  To override a `.def` partial, you need to copy over the parent `.dot` template
  as well. For OpenAPI 3 this will be `main.dot`

  except for `parameters`, `responses` and `callbacks`, which are children of
  the `operation.dot` template.


  This means it is usually easiest to copy all `.dot` and `.def` files to your
  user templates directory. A visual `diff` tool

  which can run across two directories (such as [Meld](http://meldmerge.org/) or
  [WinMerge](http://winmerge.org)) may be useful

  in bringing in changes from Widdershins updates.


  ## Tests


  To run a test-suite:


  ```

  node testRunner {path-to-APIs}

  ```


  The test harness currently expects `.yaml` or `.json` files and has been
  tested against


  * [APIs.guru](https://github.com/APIs-guru/OpenAPI-directory)

  * [Mermade OpenAPI definitions
  collection](https://github.com/mermade/OpenAPI-definitions)


  ### Comparison between this and other OpenAPI / Swagger to Slate tools


  [Blog
  posting](https://dev.to/mikeralphson/comparison-of-various-openapiswagger-to-slate-conversion-tools)
  by the author of Widdershins.


  ### Acknowledgements


  * [@latgeek](https://github.com/LatGeek) for the logo.

  * [@vfernandestoptal](https://github.com/vfernandestoptal) for the httpsnippet
  support.


  ### Widdershins in the wild


  Please feel free to add a link to your API documentation here.


  * [GOV.UK Content API
  v1.0.0](https://content-api.publishing.service.gov.uk/reference.html)

  * [GOV UK Digital Marketplace API
  v1.0.0](https://alphagov.github.io/digitalmarketplace-api-docs/#digital-marketplace-api-v1-0-0)

  * [Capital One API](https://www.capitalone.co.uk/developer/api/)

  * [Cognite Data API](http://doc.cognitedata.com/)

  * [SpeckleWorks API](https://speckleworks.github.io/SpeckleSpecs)

  * [Bank by API](https://tbicr.github.io/bank-api/bank-api.html)

  * [Open EO
  API](https://open-eo.github.io/openeo-api-poc/apireference/index.html)

  * [Split Payments API](http://docs.split.cash/)

  * [LeApp daemon API](https://leapp-to.github.io/shins/index.html)

  * [Shutterstock API](https://api-reference.shutterstock.com/)


  ## Widdershins and Shins


  If you need a wrapper around both Widdershins and Shins, why not consider the
  following third-party projects:


  * [api2html](https://github.com/tobilg/api2html)

  * [shinner](https://github.com/jantoniucci/shinner)
Mermade/oas-kit: >
  # OAS-Kit


  This is the mono-repo for the following related projects


  * [swagger2openapi](packages/swagger2openapi/README.md)

  * [oas-validator](packages/oas-validator/README.md)

  * [oas-linter](packages/oas-linter/README.md)

  * [oas-resolver](packages/oas-resolver/README.md)

  * [oas-schema-walker](packages/oas-schema-walker/README.md)

  * [oas-kit-common](packages/oas-kit-common/README.md)

  * [reftools](packages/reftools/README.md)


  ## Documentation


  * [Main site](https://mermade.github.io/oas-kit)


  ## Online converter/validator


  * [OpenAPI-webconverter](https://mermade.org.uk/openapi-converter)


  ## Supported Node.js versions


  Any LTS version.


  ## Development


  * clone the repository

  * `npm i` in the top level directory

  * `lerna bootstrap` or `npx lerna bootstrap`


  Please try and keep commits related to a single package or piece of
  functionality. PR in the usual way.


  ## Supporting development


  * [APIs.guru open-collective](https://opencollective.com/openapi-directory)

  * [Linode VPS referral
  link](https://www.linode.com/?r=5734be467cc501b23267cf66d451bc339042ddfa)
OpenAPITools/openapi-generator-cli: >
  # @openapitools/openapi-generator-cli


  [![Join the chat at
  https://gitter.im/OpenAPITools/openapi-generator](https://badges.gitter.im/OpenAPITools/openapi-generator.svg)](https://gitter.im/OpenAPITools/openapi-generator?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)


  [![Renovate
  enabled](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovateapp.com/)

  [![Build
  Status](https://travis-ci.org/openapitools/openapi-generator-cli.svg?branch=master)](https://travis-ci.org/OpenAPITools/openapi-generator-cli)

  [![HitCount](http://hits.dwyl.io/openapitools/openapi-generator-cli.svg)](http://hits.dwyl.com/openapitools/openapi-generator-cli)


  OpenAPI Generator allows generation of API client libraries (SDK generation),
  server stubs, documentation and 

  configuration automatically given an OpenAPI Spec (both 2.0 and 3.0 are
  supported). Please see

  [OpenAPITools/openapi-generator](https://github.com/OpenAPITools/openapi-generator)


  ---


  This project checks the [maven
  repository](https://mvnrepository.com/artifact/org.openapitools/openapi-generator-cli) 

  once a day for a new version and will publish this new version automatically
  as an npm package.


  **Thanks [openapitools.org](https://openapitools.org) for this awesome CLI!**


  ## Installation


  There are several ways to install the package.


  #### Global Mode


  In global mode (ie, with -g or --global appended to the command), it installs
  the package as a global package. This 

  means that you'll get the `openapi-generator` command available on your
  command line interface (CLI) as well.


  ```sh

  # install the latest version of "openapi-generator-cli"

  npm install @openapitools/openapi-generator-cli -g


  # install a specific version of "openapi-generator-cli"

  npm install @openapitools/openapi-generator-cli@cli-3.0.0 -g

  ```


  After the installation has finished you can type for example:


  ```sh

  # this shall print the correct version number

  openapi-generator version

  ```


  #### Package Mode


  It is recommended to install the package as development dependency, because
  normally you only need this dependency

  during the development process. To do that you can type the following:


  ```sh

  # install the latest version of "openapi-generator-cli"

  npm install @openapitools/openapi-generator-cli -D


  # install a specific version of "openapi-generator-cli"

  npm install @openapitools/openapi-generator-cli@cli-3.0.0 -D

  ```


  After the installation has finished you can add a script like this:


  ```json

  {
    "name": "my-cool-package",
    "version": "0.0.0",
    "scripts": {
      "my-awesome-script-name": "openapi-generator generate -i docs/openapi.yaml -g typescript-angular -o generated-sources/openapi --additional-properties=\"ngVersion=6.1.7\"",
    }
  }

  ```


  ## Further Documentation


  Please refer to the [official openapi-generator
  docs](https://github.com/OpenAPITools/openapi-generator#3---usage) for

  more information about the possible arguments and a detailed usage manual of
  the command line interface.


  ## You like the package?


  Please leave a star.
stoplightio/spectral: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
m3-moretv/smogger: >
  Простой mock сервер для OpenAPI v3

  # Установка и запуск

  - `npm i -g @m3-moretv/smogger`

  - `npx @m3-moretv/smogger -s ./spec.yaml`


  # Требования к спецификации OpenAPI

  - Mock сервер умеет работать только со спецификацией 3й версии.

  - При описании параметров http запросов нельзя использовать `allOf`, `anyOf`,
  `oneOf` (временно)

  - Для генерации данных используется
  [Faker.js](https://github.com/marak/Faker.js/). Для уточнения формата данных
  необходимо описывать их в поле `format`:

  ```

  type: string

  format: name.firstName

  ```


  # Comments

  Сейчас генерятся только ответы application/json с кодом 200


  ### TODO

  - Добавить возможность указать домен и путь до api в спеке

  - Добавить заголовок, который регулирует код ответа сервера (X-Mogger-Code:
  200 | 403 | 500 e.t.c)

  - Логи в проект


  _Supported by MoreTV with ❤️_
anupsaund/vertx-auto-swagger: >+
  # vertx-auto-swagger


  > TL;DR - How to get java Vert.x to automatically generate a Open API v3 spec
  (A.k.a. Swagger) and serve it to Swagger UI, served through Vert.x.


  ### Motivation

  I needed a way to generate a swagger spec from Java code, instead of having to
  hand craft a swagger JSON file.


  I also wanted to serve out the spec from Vert.x into Swagger UI so that it
  could be used by all.


  There is a more detailed write up available on my blog post: 

  http://anupsaund.com/how-to-generate-openapi-3-0-swagger-spec-from-vertx-java-and-serve-it-via-swagger-ui


  ### What does it do?


  1.  Read Java Annotations and map them into a openAPI spec.

  2.  Serve the openAPI spec out on an end point.

  3.  Serve a distributable version of SwaggerUI which presents the swagger spec
  from point 2.



  ### Screenshot of Swagger UI

  ![SwaggerUI](UI.PNG "SwaggerUI")


  ### What does a typical Java annotation look like?


  ```java

  @Operation(summary = "Find products by ID", method = "GET", operationId =
  "product/:productId",
      tags = {
        "Product"
      },
      parameters = {
        @Parameter(in = ParameterIn.PATH, name = "productId",
          required = true, description = "The unique ID belonging to the product", schema = @Schema(type = "string"))
      },
      responses = {
        @ApiResponse(responseCode = "200", description = "OK",
          content = @Content(
            mediaType = "application/json",
            encoding = @Encoding(contentType = "application/json"),
            schema = @Schema(name = "product", example =
              "{" +
                "'_id':'abc'," +
                "'title':'Red Truck'," +
                "'image_url':'https://images.pexels.com/photos/1112597/pexels-photo-1112597.jpeg'," +
                "'from_date':'2018-08-30'," +
                "'to_date':'2019-08-30'," +
                "'price':'125.00'," +
                "'enabled':true" +
                "}",
              implementation = Product.class)
          )
        ),
        @ApiResponse(responseCode = "404", description = "Not found."),
        @ApiResponse(responseCode = "500", description = "Internal Server Error.")
      }
    )
  ```


  ## How to get it running


  > Dependancies: Maven, JAVA and a JAVA IDE is helpful.


  1. Clone the repository and use Maven to install dependancies.

  1. In Intellij set up a config to run a Java Application with the following
  settings.


  ``` 
    Main Class: io.vertx.core.Launcher
    VM Options: <up to you, or leave blank>
    Program Arguments: run io.vertx.VertxAutoSwagger.MainVerticle
  ```


  3. After tha application has launched, go to
  http://localhost:8080/doc/index.html


  #### Special Credit

  Goes to Christos Karatzas for creating the generator class which has been used
  and enhanced for this respository:
   
  His original repository is available at:
  https://github.com/ckaratzas/vertx-openapi-spec-generator

mrin9/OpenAPI-Viewer: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
tiangolo/fastapi: >-
  {"message":"Bad
  credentials","documentation_url":"https://developer.github.com/v3"}
